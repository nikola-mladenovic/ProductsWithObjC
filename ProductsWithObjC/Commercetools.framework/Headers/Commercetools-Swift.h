// Generated by Apple Swift version 4.0.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("Commercetools")
@class ProductProjection;

SWIFT_CLASS("_TtC13Commercetools19CTProductProjection")
@interface CTProductProjection : NSObject
+ (void)searchWithSort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset lang:(NSLocale * _Nonnull)lang text:(NSString * _Nullable)text filters:(NSArray<NSString *> * _Nullable)filters filterQuery:(NSString * _Nullable)filterQuery filterFacets:(NSString * _Nullable)filterFacets facets:(NSArray<NSString *> * _Nullable)facets markMatchingVariants:(BOOL)markMatchingVariants priceCurrency:(NSString * _Nullable)priceCurrency priceCountry:(NSString * _Nullable)priceCountry priceCustomerGroup:(NSString * _Nullable)priceCustomerGroup priceChannel:(NSString * _Nullable)priceChannel resultBlock:(void (^ _Nonnull)(NSUInteger, NSUInteger, NSUInteger, NSArray<ProductProjection *> * _Nullable, NSArray<NSError *> * _Nullable))resultBlock;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class Config;
@class Customer;

SWIFT_CLASS("_TtC13Commercetools13Commercetools")
@interface Commercetools : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Config * _Nullable config;)
+ (Config * _Nullable)config SWIFT_WARN_UNUSED_RESULT;
+ (void)setConfig:(Config * _Nullable)newConfig;
+ (void)loginCustomerWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password result:(void (^ _Nonnull)(Customer * _Nullable, NSError * _Nullable))result;
+ (void)logoutCustomer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LogLevel : NSInteger;

/// Provides common Commercetools SDK configuration handling.
/// The simplest way to use this class is to add an <code>CommercetoolsConfig.plist</code> file in your app’s bundle and set
/// the desired options. Alternatively, you can use designated initializer with custom <code>.plist</code> file path.
SWIFT_CLASS("_TtC13Commercetools6Config")
@interface Config : NSObject
/// Initializes the <code>Config</code> by reading configuration from <code>CommercetoolsConfig.plist</code> file in your app’s bundle.
/// \param loggingEnabled The setting which determines whether SDK will log any
/// messages. <code>true</code> by default.
///
/// \param logLevel The SDK log level. <code>.Debug</code> by default.
///
///
/// returns:
/// The new <code>Config</code> instance if all configuration parameters were valid, ‘nil’ otherwise.
- (nullable instancetype)initWithLoggingEnabled:(BOOL)loggingEnabled logLevel:(enum LogLevel)logLevel;
/// Initializes the <code>Config</code> by reading configuration from <code>.plist</code> file specified in the path.
/// \param path The path of the specified <code>.plist</code> file.
///
/// \param loggingEnabled The setting which determines whether SDK will log any
/// messages. <code>true</code> by default.
///
/// \param logLevel The SDK log level. <code>.Debug</code> by default.
///
///
/// returns:
/// The new <code>Config</code> instance if all configuration parameters were valid, ‘nil’ otherwise.
- (nullable instancetype)initWithPath:(NSString * _Nonnull)path loggingEnabled:(BOOL)loggingEnabled logLevel:(enum LogLevel)logLevel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// Provides complete set of interactions for retrieving current customer profile, signing up,
/// updating and profile deletion.
SWIFT_CLASS("_TtC13Commercetools8Customer")
@interface Customer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly, copy) NSString * _Nullable customerNumber;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull email;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable middleName;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable salutation;
@property (nonatomic, readonly, copy) NSDate * _Nullable dateOfBirth;
@property (nonatomic, readonly, copy) NSString * _Nullable companyName;
@property (nonatomic, readonly, copy) NSString * _Nullable vatId;
@property (nonatomic, readonly, copy) NSString * _Nullable defaultShippingAddressId;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable shippingAddressIds;
@property (nonatomic, readonly, copy) NSString * _Nullable defaultBillingAddressId;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable billingAddressIds;
@property (nonatomic, readonly) BOOL isEmailVerified;
@property (nonatomic, readonly, copy) NSString * _Nullable externalId;
@property (nonatomic, readonly, copy) NSString * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools5Image")
@interface Image : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

/// Used to specify desired log output level for Commercetools library.
/// <ul>
///   <li>
///     Error: Log only errors.
///   </li>
///   <li>
///     Debug: Log both errors and other important messages for development and debugging purposes.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, LogLevel) {
  LogLevelError = 0,
  LogLevelDebug = 1,
};


SWIFT_CLASS("_TtC13Commercetools5Money")
@interface Money : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools5Price")
@interface Price : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) Money * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
@property (nonatomic, readonly, copy) NSDate * _Nullable validFrom;
@property (nonatomic, readonly, copy) NSDate * _Nullable validUntil;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class Reference2;
@class SearchKeyword;

/// Provides complete set of interactions for querying and retrieving product projections.
SWIFT_CLASS("_TtC13Commercetools17ProductProjection")
@interface ProductProjection : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull slug;
@property (nonatomic, readonly, copy) NSArray<Reference2 *> * _Nonnull categoryReferences;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable categoryOrderHints;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable metaTitle;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable metaDescription;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable metaKeywords;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSArray<SearchKeyword *> *> * _Nonnull searchKeywords;
@property (nonatomic, readonly) BOOL hasStagedChanges;
@property (nonatomic, readonly) BOOL published;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools14ProductVariant")
@interface ProductVariant : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nullable sku;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly, copy) NSArray<Price *> * _Nullable prices;
@property (nonatomic, readonly, strong) Price * _Nullable price;
@property (nonatomic, readonly, copy) NSArray<Image *> * _Nullable images;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools10Reference2")
@interface Reference2 : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeId;
@property (nonatomic, readonly) id _Nullable obj;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class SuggestTokenizer;

SWIFT_CLASS("_TtC13Commercetools13SearchKeyword")
@interface SearchKeyword : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, strong) SuggestTokenizer * _Nullable suggestTokenizer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools16SuggestTokenizer")
@interface SuggestTokenizer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable inputs;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
