// Generated by Apple Swift version 4.0.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("Commercetools")

SWIFT_PROTOCOL("_TtP13Commercetools10CartUpdate_")
@protocol CartUpdate
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
@end


SWIFT_CLASS("_TtC13Commercetools15AddDiscountCode")
@interface AddDiscountCode : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithCode:(NSString * _Nonnull)code OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class LineItemDraft;

SWIFT_CLASS("_TtC13Commercetools11AddLineItem")
@interface AddLineItem : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithLineItemDraft:(LineItemDraft * _Nonnull)lineItemDraft OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class ObjCReference;

SWIFT_CLASS("_TtC13Commercetools10AddPayment")
@interface AddPayment : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithPayment:(ObjCReference * _Nonnull)payment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP13Commercetools13PaymentUpdate_")
@protocol PaymentUpdate
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
@end

@class TransactionDraft;

SWIFT_CLASS("_TtC13Commercetools14AddTransaction")
@interface AddTransaction : NSObject <PaymentUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithTransaction:(TransactionDraft * _Nonnull)transaction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools7Address")
@interface Address : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable salutation;
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable streetName;
@property (nonatomic, readonly, copy) NSString * _Nullable streetNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable city;
@property (nonatomic, readonly, copy) NSString * _Nullable region;
@property (nonatomic, readonly, copy) NSString * _Nullable postalCode;
@property (nonatomic, readonly, copy) NSString * _Nullable additionalStreetInfo;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSString * _Nonnull country;
@property (nonatomic, readonly, copy) NSString * _Nullable company;
@property (nonatomic, readonly, copy) NSString * _Nullable department;
@property (nonatomic, readonly, copy) NSString * _Nullable building;
@property (nonatomic, readonly, copy) NSString * _Nullable apartment;
@property (nonatomic, readonly, copy) NSString * _Nullable pOBox;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, readonly, copy) NSString * _Nullable mobile;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable fax;
@property (nonatomic, readonly, copy) NSString * _Nullable additionalAddressInfo;
@property (nonatomic, readonly, copy) NSString * _Nullable externalId;
- (nonnull instancetype)initWithId:(NSString * _Nullable)id title:(NSString * _Nullable)title salutation:(NSString * _Nullable)salutation firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName streetName:(NSString * _Nullable)streetName streetNumber:(NSString * _Nullable)streetNumber city:(NSString * _Nullable)city region:(NSString * _Nullable)region postalCode:(NSString * _Nullable)postalCode additionalStreetInfo:(NSString * _Nullable)additionalStreetInfo state:(NSString * _Nullable)state country:(NSString * _Nonnull)country company:(NSString * _Nullable)company department:(NSString * _Nullable)department building:(NSString * _Nullable)building apartment:(NSString * _Nullable)apartment pOBox:(NSString * _Nullable)pOBox phone:(NSString * _Nullable)phone mobile:(NSString * _Nullable)mobile email:(NSString * _Nullable)email fax:(NSString * _Nullable)fax additionalAddressInfo:(NSString * _Nullable)additionalAddressInfo externalId:(NSString * _Nullable)externalId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, AnonymousCartSignInModeEnum) {
  AnonymousCartSignInModeEnumMergeWithExistingCustomerCart = 0,
  AnonymousCartSignInModeEnumUseAsNewActiveCustomerCart = 1,
};

@class AttributeType;

SWIFT_CLASS("_TtC13Commercetools19AttributeDefinition")
@interface AttributeDefinition : NSObject
@property (nonatomic, readonly, strong) AttributeType * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull label;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable inputTip;
@property (nonatomic, readonly) BOOL isRequired;
@property (nonatomic, readonly) BOOL isSearchable;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13AttributeType")
@interface AttributeType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class LineItem;
@class CustomLineItem;
@class Money;
@class TaxedPrice;
enum CartStateEnum : NSInteger;
enum InventoryModeEnum : NSInteger;
enum TaxModeEnum : NSInteger;
enum RoundingModeEnum : NSInteger;
@class ShippingInfo;
@class DiscountCodeInfo;
@class PaymentInfo;
@class CartResponse;
@class CartDraft;

/// Provides complete set of interactions for querying, retrieving, creating and updating shopping cart.
SWIFT_CLASS("_TtC13Commercetools4Cart")
@interface Cart : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSString * _Nullable customerId;
@property (nonatomic, readonly, copy) NSString * _Nullable customerEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSArray<LineItem *> * _Nonnull lineItems;
@property (nonatomic, readonly, copy) NSArray<CustomLineItem *> * _Nonnull customLineItems;
@property (nonatomic, readonly, strong) Money * _Nonnull totalPrice;
@property (nonatomic, readonly, strong) TaxedPrice * _Nullable taxedPrice;
@property (nonatomic, readonly) enum CartStateEnum cartStateValue;
@property (nonatomic, readonly, strong) Address * _Nullable shippingAddress;
@property (nonatomic, readonly, strong) Address * _Nullable billingAddress;
@property (nonatomic, readonly) enum InventoryModeEnum inventoryModeValue;
@property (nonatomic, readonly) enum TaxModeEnum taxModeValue;
@property (nonatomic, readonly) enum RoundingModeEnum taxRoundingModeValue;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable customerGroupReference;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
@property (nonatomic, readonly, strong) ShippingInfo * _Nullable shippingInfo;
@property (nonatomic, readonly, copy) NSArray<DiscountCodeInfo *> * _Nonnull discountCodes;
@property (nonatomic, readonly, copy) NSArray<ObjCReference *> * _Nonnull refusedGiftReferences;
@property (nonatomic, readonly) id _Nullable customValue;
@property (nonatomic, readonly, strong) PaymentInfo * _Nullable paymentInfo;
@property (nonatomic, readonly, copy) NSString * _Nullable locale;
@property (nonatomic, readonly) NSUInteger deleteDaysAfterLastModificationValue;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
/// Retrieves a cart by UUID.
/// \param id Unique ID of the cart to be retrieved.
///
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)byId:(NSString * _Nonnull)id expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Cart * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Retrieves the cart with state Active which has the most recent lastModifiedAt.
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)activeWithExpansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Cart * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Queries for carts.
/// \param predicate An optional array of predicates used for querying for carts.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param result The code to be executed after processing the response.
///
+ (void)queryWithPredicates:(NSArray<NSString *> * _Nullable)predicates sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset result:(void (^ _Nonnull)(CartResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)delete:(NSString * _Nonnull)id version:(NSUInteger)version expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Cart * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)create:(CartDraft * _Nonnull)object expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Cart * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)update:(NSString * _Nonnull)id version:(NSUInteger)version actions:(NSArray<id <CartUpdate>> * _Nonnull)actions expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Cart * _Nullable, NSArray<NSError *> * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class CustomLineItemDraft;

SWIFT_CLASS("_TtC13Commercetools9CartDraft")
@interface CartDraft : NSObject
- (nonnull instancetype)initWithCurrency:(NSString * _Nonnull)currency customerId:(NSString * _Nullable)customerId customerEmail:(NSString * _Nullable)customerEmail anonymousId:(NSString * _Nullable)anonymousId country:(NSString * _Nullable)country inventoryMode:(enum InventoryModeEnum)inventoryMode taxMode:(enum TaxModeEnum)taxMode lineItems:(NSArray<LineItemDraft *> * _Nullable)lineItems customLineItems:(NSArray<CustomLineItemDraft *> * _Nullable)customLineItems shippingAddress:(Address * _Nullable)shippingAddress billingAddress:(Address * _Nullable)billingAddress shippingMethod:(ObjCReference * _Nullable)shippingMethod custom:(id _Nullable)custom locale:(NSString * _Nullable)locale deleteDaysAfterLastModification:(NSUInteger)deleteDaysAfterLastModification OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools12CartResponse")
@interface CartResponse : NSObject
@property (nonatomic, readonly) NSUInteger offset;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) NSUInteger total;
@property (nonatomic, readonly, copy) NSArray<Cart *> * _Nonnull results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CartStateEnum) {
  CartStateEnumActive = 0,
  CartStateEnumMerged = 1,
  CartStateEnumOrdered = 2,
};



SWIFT_CLASS("_TtC13Commercetools19ChangeAmountPlanned")
@interface ChangeAmountPlanned : NSObject <PaymentUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithAmount:(Money * _Nonnull)amount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools22ChangeLineItemQuantity")
@interface ChangeLineItemQuantity : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithLineItemId:(NSString * _Nonnull)lineItemId quantity:(NSUInteger)quantity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13ChangeTaxMode")
@interface ChangeTaxMode : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithTaxMode:(enum TaxModeEnum)taxMode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class Config;
@class Customer;
enum TokenState : NSInteger;

SWIFT_CLASS("_TtC13Commercetools13Commercetools")
@interface Commercetools : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Config * _Nullable config;)
+ (Config * _Nullable)config SWIFT_WARN_UNUSED_RESULT;
+ (void)setConfig:(Config * _Nullable)newConfig;
+ (void)loginCustomerWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password activeCartSignInMode:(enum AnonymousCartSignInModeEnum)activeCartSignInMode result:(void (^ _Nonnull)(Customer * _Nullable, Cart * _Nullable, NSError * _Nullable))result;
+ (void)logoutCustomer;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) enum TokenState authState;)
+ (enum TokenState)authState SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LogLevel : NSInteger;

/// Provides common Commercetools SDK configuration handling.
/// The simplest way to use this class is to add an <code>CommercetoolsConfig.plist</code> file in your app’s bundle and set
/// the desired options. Alternatively, you can use designated initializer with custom <code>.plist</code> file path.
SWIFT_CLASS("_TtC13Commercetools6Config")
@interface Config : NSObject
/// Initializes the <code>Config</code> by reading configuration from <code>CommercetoolsConfig.plist</code> file in your app’s bundle.
/// \param loggingEnabled The setting which determines whether SDK will log any
/// messages. <code>true</code> by default.
///
/// \param logLevel The SDK log level. <code>.Debug</code> by default.
///
///
/// returns:
/// The new <code>Config</code> instance if all configuration parameters were valid, ‘nil’ otherwise.
- (nullable instancetype)initWithLoggingEnabled:(BOOL)loggingEnabled logLevel:(enum LogLevel)logLevel;
/// Initializes the <code>Config</code> by reading configuration from <code>.plist</code> file specified in the path.
/// \param path The path of the specified <code>.plist</code> file.
///
/// \param loggingEnabled The setting which determines whether SDK will log any
/// messages. <code>true</code> by default.
///
/// \param logLevel The SDK log level. <code>.Debug</code> by default.
///
///
/// returns:
/// The new <code>Config</code> instance if all configuration parameters were valid, ‘nil’ otherwise.
- (nullable instancetype)initWithPath:(NSString * _Nonnull)path loggingEnabled:(BOOL)loggingEnabled logLevel:(enum LogLevel)logLevel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class TaxedItemPrice;
@class ItemState;
@class TaxRate;
@class DiscountedLineItemPriceForQuantity;

SWIFT_CLASS("_TtC13Commercetools14CustomLineItem")
@interface CustomLineItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull name;
@property (nonatomic, readonly, strong) Money * _Nonnull money;
@property (nonatomic, readonly, strong) TaxedItemPrice * _Nullable taxedPrice;
@property (nonatomic, readonly, strong) Money * _Nonnull totalPrice;
@property (nonatomic, readonly, copy) NSString * _Nonnull slug;
@property (nonatomic, readonly) NSInteger quantity;
@property (nonatomic, readonly, strong) ItemState * _Nonnull state;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable taxCategoryReference;
@property (nonatomic, readonly, strong) TaxRate * _Nullable taxRate;
@property (nonatomic, readonly, copy) NSArray<DiscountedLineItemPriceForQuantity *> * _Nonnull discountedPricePerQuantity;
@property (nonatomic, readonly) id _Nullable customValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools19CustomLineItemDraft")
@interface CustomLineItemDraft : NSObject
- (nonnull instancetype)initWithName:(NSDictionary<NSString *, NSString *> * _Nonnull)name quantity:(NSUInteger)quantity money:(Money * _Nonnull)money slug:(NSString * _Nonnull)slug taxCategory:(ObjCReference * _Nullable)taxCategory custom:(id _Nullable)custom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// Provides complete set of interactions for retrieving current customer profile, signing up,
/// updating and profile deletion.
SWIFT_CLASS("_TtC13Commercetools8Customer")
@interface Customer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly, copy) NSString * _Nullable customerNumber;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull email;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable middleName;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable salutation;
@property (nonatomic, readonly, copy) NSDate * _Nullable dateOfBirth;
@property (nonatomic, readonly, copy) NSString * _Nullable companyName;
@property (nonatomic, readonly, copy) NSString * _Nullable vatId;
@property (nonatomic, readonly, copy) NSArray<Address *> * _Nonnull addresses;
@property (nonatomic, readonly, copy) NSString * _Nullable defaultShippingAddressId;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable shippingAddressIds;
@property (nonatomic, readonly, copy) NSString * _Nullable defaultBillingAddressId;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable billingAddressIds;
@property (nonatomic, readonly) BOOL isEmailVerified;
@property (nonatomic, readonly, copy) NSString * _Nullable externalId;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable customerGroupReference;
@property (nonatomic, readonly) id _Nullable customValue;
@property (nonatomic, readonly, copy) NSString * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class DeliveryItem;
@class Parcel;

SWIFT_CLASS("_TtC13Commercetools8Delivery")
@interface Delivery : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSArray<DeliveryItem *> * _Nonnull items;
@property (nonatomic, readonly, copy) NSArray<Parcel *> * _Nonnull parcels;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools12DeliveryItem")
@interface DeliveryItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSInteger quantity;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

enum DiscountCodeStateEnum : NSInteger;

SWIFT_CLASS("_TtC13Commercetools16DiscountCodeInfo")
@interface DiscountCodeInfo : NSObject
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull discountCodeReferene;
@property (nonatomic, readonly) enum DiscountCodeStateEnum stateValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, DiscountCodeStateEnum) {
  DiscountCodeStateEnumNotActive = 0,
  DiscountCodeStateEnumDoesNotMatchCart = 1,
  DiscountCodeStateEnumMatchesCart = 2,
  DiscountCodeStateEnumMaxApplicationReached = 3,
};


SWIFT_CLASS("_TtC13Commercetools25DiscountedLineItemPortion")
@interface DiscountedLineItemPortion : NSObject
@property (nonatomic, readonly) id _Nullable discountReference;
@property (nonatomic, readonly, strong) Money * _Nonnull discountedAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools23DiscountedLineItemPrice")
@interface DiscountedLineItemPrice : NSObject
@property (nonatomic, readonly, strong) Money * _Nonnull value;
@property (nonatomic, readonly, copy) NSArray<DiscountedLineItemPortion *> * _Nonnull includedDiscounts;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools34DiscountedLineItemPriceForQuantity")
@interface DiscountedLineItemPriceForQuantity : NSObject
@property (nonatomic, readonly) NSInteger quantity;
@property (nonatomic, readonly, strong) DiscountedLineItemPrice * _Nonnull discountedPrice;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools15DiscountedPrice")
@interface DiscountedPrice : NSObject
@property (nonatomic, readonly, strong) Money * _Nonnull value;
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull discountReference;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools5Image")
@interface Image : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, InventoryModeEnum) {
  InventoryModeEnumTrackOnly = 0,
  InventoryModeEnumReserveOnOrder = 1,
  InventoryModeEnumNone = 2,
};


SWIFT_CLASS("_TtC13Commercetools9ItemState")
@interface ItemState : NSObject
@property (nonatomic, readonly) NSInteger quantity;
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull stateReference;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class ProductVariant;
@class Price;
enum LineItemPriceModeEnum : NSInteger;
enum LineItemModeEnum : NSInteger;

SWIFT_CLASS("_TtC13Commercetools8LineItem")
@interface LineItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull productId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable productSlug;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable productTypeReference;
@property (nonatomic, readonly, strong) ProductVariant * _Nonnull variant;
@property (nonatomic, readonly, strong) Price * _Nonnull price;
@property (nonatomic, readonly, strong) TaxedItemPrice * _Nullable taxedPrice;
@property (nonatomic, readonly, strong) Money * _Nonnull totalPrice;
@property (nonatomic, readonly) NSInteger quantity;
@property (nonatomic, readonly, copy) NSArray<ItemState *> * _Nonnull state;
@property (nonatomic, readonly, strong) TaxRate * _Nullable taxRate;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable supplyChannelReference;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable distributionChannelReference;
@property (nonatomic, readonly, copy) NSArray<DiscountedLineItemPriceForQuantity *> * _Nonnull discountedPricePerQuantity;
@property (nonatomic, readonly) enum LineItemPriceModeEnum priceModeValue;
@property (nonatomic, readonly) enum LineItemModeEnum lineItemModeValue;
@property (nonatomic, readonly) id _Nullable customObject;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13LineItemDraft")
@interface LineItemDraft : NSObject
- (nonnull instancetype)initWithProductId:(NSString * _Nullable)productId variantId:(NSInteger)variantId sku:(NSString * _Nullable)sku quantity:(NSUInteger)quantity supplyChannel:(ObjCReference * _Nullable)supplyChannel distributionChannel:(ObjCReference * _Nullable)distributionChannel custom:(id _Nullable)custom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, LineItemModeEnum) {
  LineItemModeEnumStandard = 0,
  LineItemModeEnumGiftLineItem = 1,
};

typedef SWIFT_ENUM(NSInteger, LineItemPriceModeEnum) {
  LineItemPriceModeEnumPlatform = 0,
  LineItemPriceModeEnumExternalPrice = 1,
  LineItemPriceModeEnumExternalTotal = 2,
};

/// Used to specify desired log output level for Commercetools library.
/// <ul>
///   <li>
///     Error: Log only errors.
///   </li>
///   <li>
///     Debug: Log both errors and other important messages for development and debugging purposes.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, LogLevel) {
  LogLevelError = 0,
  LogLevelDebug = 1,
};


SWIFT_CLASS("_TtC13Commercetools5Money")
@interface Money : NSObject
- (nonnull instancetype)initWithCurrencyCode:(NSString * _Nonnull)currencyCode centAmount:(NSInteger)centAmount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13ObjCReference")
@interface ObjCReference : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeId;
@property (nonatomic, readonly) id _Nullable obj;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id typeId:(NSString * _Nonnull)typeId obj:(id _Nullable)obj OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

enum OrderStateEnum : NSInteger;
enum ShipmentStateEnum : NSInteger;
enum PaymentStateEnum : NSInteger;
@class SyncInfo;
@class ReturnInfo;
@class OrderResponse;
@class OrderDraft;

/// Provides complete set of interactions for querying, retrieving and creating an order.
SWIFT_CLASS("_TtC13Commercetools5Order")
@interface Order : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable completedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable orderNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable customerId;
@property (nonatomic, readonly, copy) NSString * _Nullable customerEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSArray<LineItem *> * _Nonnull lineItems;
@property (nonatomic, readonly, copy) NSArray<CustomLineItem *> * _Nonnull customLineItems;
@property (nonatomic, readonly, strong) Money * _Nonnull totalPrice;
@property (nonatomic, readonly, strong) TaxedPrice * _Nullable taxedPrice;
@property (nonatomic, readonly, strong) Address * _Nullable shippingAddress;
@property (nonatomic, readonly, strong) Address * _Nullable billingAddress;
@property (nonatomic, readonly) enum TaxModeEnum taxModeValue;
@property (nonatomic, readonly) enum RoundingModeEnum taxRoundingModeValue;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable customerGroupReference;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
@property (nonatomic, readonly) enum OrderStateEnum orderStateValue;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable stateReference;
@property (nonatomic, readonly) enum ShipmentStateEnum shipmentStateValue;
@property (nonatomic, readonly) enum PaymentStateEnum paymentStateValue;
@property (nonatomic, readonly, strong) ShippingInfo * _Nullable shippingInfo;
@property (nonatomic, readonly, copy) NSArray<SyncInfo *> * _Nonnull syncInfo;
@property (nonatomic, readonly, copy) NSArray<ReturnInfo *> * _Nonnull returnInfo;
@property (nonatomic, readonly, copy) NSArray<DiscountCodeInfo *> * _Nonnull discountCodes;
@property (nonatomic, readonly) NSInteger lastMessageSequenceNumber;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable cartReference;
@property (nonatomic, readonly) id _Nullable customValue;
@property (nonatomic, readonly, strong) PaymentInfo * _Nullable paymentInfo;
@property (nonatomic, readonly, copy) NSString * _Nullable locale;
@property (nonatomic, readonly) enum InventoryModeEnum inventoryModeValue;
/// Retrieves an order by UUID.
/// \param id Unique ID of the order to be retrieved.
///
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)byId:(NSString * _Nonnull)id expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Order * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Queries for orders.
/// \param predicate An optional array of predicates used for querying for orders.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param result The code to be executed after processing the response.
///
+ (void)queryWithPredicates:(NSArray<NSString *> * _Nullable)predicates sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset result:(void (^ _Nonnull)(OrderResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)create:(OrderDraft * _Nonnull)object expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Order * _Nullable, NSArray<NSError *> * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools10OrderDraft")
@interface OrderDraft : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) NSUInteger version;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id version:(NSUInteger)version OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13OrderResponse")
@interface OrderResponse : NSObject
@property (nonatomic, readonly) NSUInteger offset;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) NSUInteger total;
@property (nonatomic, readonly, copy) NSArray<Order *> * _Nonnull results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, OrderStateEnum) {
  OrderStateEnumOpen = 0,
  OrderStateEnumConfirmed = 1,
  OrderStateEnumComplete = 2,
  OrderStateEnumCancelled = 3,
};

@class ParcelMeasurements;
@class TrackingData;

SWIFT_CLASS("_TtC13Commercetools6Parcel")
@interface Parcel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, strong) ParcelMeasurements * _Nullable measurements;
@property (nonatomic, readonly, strong) TrackingData * _Nullable trackingData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools18ParcelMeasurements")
@interface ParcelMeasurements : NSObject
@property (nonatomic, readonly) double heightInMillimeter;
@property (nonatomic, readonly) double lengthInMillimeter;
@property (nonatomic, readonly) double widthInMillimeter;
@property (nonatomic, readonly) double weightInGram;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class PaymentMethodInfo;
@class Transaction;
@class PaymentResponse;
@class PaymentDraft;

/// Provides complete set of interactions for querying, retrieving, creating and updating payments.
SWIFT_CLASS("_TtC13Commercetools7Payment")
@interface Payment : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable customerReference;
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, strong) Money * _Nonnull amountPlanned;
@property (nonatomic, readonly, strong) PaymentMethodInfo * _Nonnull paymentMethodInfo;
@property (nonatomic, readonly, copy) NSArray<Transaction *> * _Nonnull transactions;
@property (nonatomic, readonly) id _Nullable customValue;
/// Retrieves a payment by UUID.
/// \param id Unique ID of the payment to be retrieved.
///
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)byId:(NSString * _Nonnull)id expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Payment * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Queries for payments.
/// \param predicate An optional array of predicates used for querying for payments.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param result The code to be executed after processing the response.
///
+ (void)queryWithPredicates:(NSArray<NSString *> * _Nullable)predicates sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset result:(void (^ _Nonnull)(PaymentResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)delete:(NSString * _Nonnull)id version:(NSUInteger)version expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Payment * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)create:(PaymentDraft * _Nonnull)object expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Payment * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)update:(NSString * _Nonnull)id version:(NSUInteger)version actions:(NSArray<id <PaymentUpdate>> * _Nonnull)actions expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(Payment * _Nullable, NSArray<NSError *> * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools12PaymentDraft")
@interface PaymentDraft : NSObject
- (nonnull instancetype)initWithAmountPlanned:(Money * _Nonnull)amountPlanned paymentMethodInfo:(PaymentMethodInfo * _Nullable)paymentMethodInfo custom:(id _Nullable)custom transaction:(TransactionDraft * _Nullable)transaction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools11PaymentInfo")
@interface PaymentInfo : NSObject
@property (nonatomic, readonly, copy) NSArray<ObjCReference *> * _Nonnull paymentReferences;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools17PaymentMethodInfo")
@interface PaymentMethodInfo : NSObject
- (nonnull instancetype)initWithPaymentInterface:(NSString * _Nullable)paymentInterface method:(NSString * _Nullable)method name:(NSDictionary<NSString *, NSString *> * _Nullable)name OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nullable paymentInterface;
@property (nonatomic, readonly, copy) NSString * _Nullable method;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools15PaymentResponse")
@interface PaymentResponse : NSObject
@property (nonatomic, readonly) NSUInteger offset;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) NSUInteger total;
@property (nonatomic, readonly, copy) NSArray<Payment *> * _Nonnull results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, PaymentStateEnum) {
  PaymentStateEnumNone = 0,
  PaymentStateEnumBalanceDue = 1,
  PaymentStateEnumFailed = 2,
  PaymentStateEnumPending = 3,
  PaymentStateEnumCreditOwed = 4,
  PaymentStateEnumPaid = 5,
};


@class PriceTier;

SWIFT_CLASS("_TtC13Commercetools5Price")
@interface Price : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) Money * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable customerGroupReference;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable channelReference;
@property (nonatomic, readonly, copy) NSDate * _Nullable validFrom;
@property (nonatomic, readonly, copy) NSDate * _Nullable validUntil;
@property (nonatomic, readonly, copy) NSArray<PriceTier *> * _Nullable tiers;
@property (nonatomic, readonly, strong) DiscountedPrice * _Nullable discounted;
@property (nonatomic, readonly) id _Nullable customObject;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools9PriceTier")
@interface PriceTier : NSObject
@property (nonatomic, readonly) NSUInteger minimumQuantity;
@property (nonatomic, readonly, strong) Money * _Nonnull value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class SearchKeyword;
@class ReviewRatingStatistics;
@class NSNumber;
@class ProductProjectionResponse;

SWIFT_CLASS("_TtC13Commercetools17ProductProjection")
@interface ProductProjection : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull productType;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable productDescription;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull slug;
@property (nonatomic, readonly, copy) NSArray<ObjCReference *> * _Nonnull categories;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable categoryOrderHints;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable metaTitle;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable metaDescription;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable metaKeywords;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSArray<SearchKeyword *> *> * _Nonnull searchKeywords;
@property (nonatomic, readonly) BOOL hasStagedChanges;
@property (nonatomic, readonly) BOOL published;
@property (nonatomic, readonly, strong) ProductVariant * _Nonnull masterVariant;
@property (nonatomic, readonly, copy) NSArray<ProductVariant *> * _Nonnull variants;
/// The union of <code>masterVariant</code> and other<code>variants</code>.
@property (nonatomic, readonly, copy) NSArray<ProductVariant *> * _Nonnull allVariants;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable taxCategory;
@property (nonatomic, readonly, strong) ObjCReference * _Nullable state;
@property (nonatomic, readonly, strong) ReviewRatingStatistics * _Nullable reviewRatingStatistics;
/// Full-text search queries over product projections endpoint.
/// \param staged An optional bool value, determining whether to query
/// for the current or staged projections.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param lang Locale for text search. If no locale is provided, current locale will be
/// the default value.
///
/// \param text Localized text to analyze and search for.
///
/// \param fuzzy An optional parameter determining whether to apply fuzzy search on
/// the text to analyze.
///
/// \param fuzzyLevel An optional <code>Int</code>, which if used, explicitly sets the desired
/// fuzzy level, if <code>fuzzy</code> is enabled.
///
/// \param filters An optional array of filters to be applied to the search results
/// (after facets have been calculated).
///
/// \param filterQuery An optional filter to be applied to the search results
/// (before facets have been calculated).
///
/// \param filterFacets An optional filter for all facets calculations.
///
/// \param facets An optional facets param used for calculating statistical counts
/// to aid in faceted navigation.
///
/// \param markMatchingVariants An optional boolean, specifying whether to mark product variants
/// in the search result matching the criteria.
///
/// \param priceCurrency An optional currency code compliant to ISO 4217.
///
/// \param priceCountry An optional two-digit country code as per ISO 3166-1 alpha-2.
///
/// \param priceCustomerGroup An optional price customer group UUID.
///
/// \param priceChannel An optional price channel UUID.
///
/// \param result The code to be executed after processing the response.
///
+ (void)searchWithStaged:(BOOL)staged sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset lang:(NSLocale * _Nonnull)lang text:(NSString * _Nullable)text fuzzy:(BOOL)fuzzy fuzzyLevel:(NSNumber * _Nullable)fuzzyLevel filters:(NSArray<NSString *> * _Nullable)filters filterQuery:(NSString * _Nullable)filterQuery filterFacets:(NSString * _Nullable)filterFacets facets:(NSArray<NSString *> * _Nullable)facets markMatchingVariants:(BOOL)markMatchingVariants priceCurrency:(NSString * _Nullable)priceCurrency priceCountry:(NSString * _Nullable)priceCountry priceCustomerGroup:(NSString * _Nullable)priceCustomerGroup priceChannel:(NSString * _Nullable)priceChannel result:(void (^ _Nonnull)(ProductProjectionResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Retrieves suggestions based on the <code>searchKeyword</code> product field.
/// \param staged An optional bool value, determining whether to query
/// for the current or staged projections.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param lang Locale for text search. If no locale is provided, current locale will be
/// the default value.
///
/// \param searchKeywords Localized text to analyze retrieve suggestions for.
///
/// \param fuzzy An optional parameter determining whether to apply fuzzy search on
/// the text to analyze.
///
/// \param result The code to be executed after processing the response.
///
+ (void)suggestWithStaged:(BOOL)staged limit:(NSUInteger)limit lang:(NSLocale * _Nonnull)lang searchKeywords:(NSString * _Nonnull)searchKeywords fuzzy:(BOOL)fuzzy result:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Queries for product projection.
/// \param staged An optional bool value, determining whether to query
/// for the current or staged projections.
///
/// \param predicate An optional array of predicates used for querying for  product projections.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param result The code to be executed after processing the response.
///
+ (void)queryWithStaged:(BOOL)staged predicates:(NSArray<NSString *> * _Nullable)predicates sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset result:(void (^ _Nonnull)(ProductProjectionResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Retrieves a product projection by UUID.
/// \param staged An optional bool value, determining whether to retrieve current or staged
/// product projection variant.
///
/// \param id Unique ID of the product projection to be retrieved.
///
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)byId:(NSString * _Nonnull)id staged:(BOOL)staged expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(ProductProjection * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)byKey:(NSString * _Nonnull)key expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(ProductProjection * _Nullable, NSArray<NSError *> * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools25ProductProjectionResponse")
@interface ProductProjectionResponse : NSObject
@property (nonatomic, readonly) NSUInteger offset;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) NSUInteger total;
@property (nonatomic, readonly, copy) NSArray<ProductProjection *> * _Nonnull results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class ProductTypeResponse;

/// Provides set of interactions for querying, retrieving by UUID and by key for product types.
SWIFT_CLASS("_TtC13Commercetools11ProductType")
@interface ProductType : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeDescription;
@property (nonatomic, readonly, copy) NSArray<AttributeDefinition *> * _Nonnull attributes;
/// Retrieves a ProductType by UUID.
/// \param id Unique ID of the ProductType to be retrieved.
///
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)byId:(NSString * _Nonnull)id expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(ProductType * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Queries for product types.
/// \param predicate An optional array of predicates used for querying for product types.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param result The code to be executed after processing the response.
///
+ (void)queryWithPredicates:(NSArray<NSString *> * _Nullable)predicates sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset result:(void (^ _Nonnull)(ProductTypeResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)byKey:(NSString * _Nonnull)key expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(ProductType * _Nullable, NSArray<NSError *> * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools19ProductTypeResponse")
@interface ProductTypeResponse : NSObject
@property (nonatomic, readonly) NSUInteger offset;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) NSUInteger total;
@property (nonatomic, readonly, copy) NSArray<ProductType *> * _Nonnull results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools14ProductVariant")
@interface ProductVariant : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nullable sku;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly, copy) NSArray<Price *> * _Nullable prices;
@property (nonatomic, readonly, strong) Price * _Nullable price;
@property (nonatomic, readonly, copy) NSArray<Image *> * _Nullable images;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools11Recalculate")
@interface Recalculate : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithUpdateProductData:(BOOL)updateProductData OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools18RemoveDiscountCode")
@interface RemoveDiscountCode : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithDiscountCode:(ObjCReference * _Nonnull)discountCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools14RemoveLineItem")
@interface RemoveLineItem : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithLineItemId:(NSString * _Nonnull)lineItemId quantity:(NSUInteger)quantity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13RemovePayment")
@interface RemovePayment : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithPayment:(ObjCReference * _Nonnull)payment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools18ResourceIdentifier")
@interface ResourceIdentifier : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable typeId;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
- (nonnull instancetype)initWithId:(NSString * _Nullable)id typeId:(NSString * _Nullable)typeId key:(NSString * _Nullable)key OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class ReturnItem;

SWIFT_CLASS("_TtC13Commercetools10ReturnInfo")
@interface ReturnInfo : NSObject
@property (nonatomic, readonly, copy) NSArray<ReturnItem *> * _Nonnull items;
@property (nonatomic, readonly, copy) NSString * _Nonnull returnTrackingId;
@property (nonatomic, readonly, copy) NSDate * _Nonnull returnDate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

enum ReturnShipmentStateEnum : NSInteger;
enum ReturnPaymentStateEnum : NSInteger;

SWIFT_CLASS("_TtC13Commercetools10ReturnItem")
@interface ReturnItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSInteger quantity;
@property (nonatomic, readonly, copy) NSString * _Nonnull lineItemId;
@property (nonatomic, readonly, copy) NSString * _Nonnull comment;
@property (nonatomic, readonly) enum ReturnShipmentStateEnum shipmentStateValue;
@property (nonatomic, readonly) enum ReturnPaymentStateEnum paymentStateValue;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, ReturnPaymentStateEnum) {
  ReturnPaymentStateEnumNonRefundable = 0,
  ReturnPaymentStateEnumInitial = 1,
  ReturnPaymentStateEnumRefunded = 2,
  ReturnPaymentStateEnumNotRefunded = 3,
};

typedef SWIFT_ENUM(NSInteger, ReturnShipmentStateEnum) {
  ReturnShipmentStateEnumAdvised = 0,
  ReturnShipmentStateEnumReturned = 1,
  ReturnShipmentStateEnumBackInStock = 2,
  ReturnShipmentStateEnumUnusable = 3,
};


SWIFT_CLASS("_TtC13Commercetools22ReviewRatingStatistics")
@interface ReviewRatingStatistics : NSObject
@property (nonatomic, readonly) double averageRating;
@property (nonatomic, readonly) double highestRating;
@property (nonatomic, readonly) double lowestRating;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) id _Nonnull ratingDistribution;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, RoundingModeEnum) {
  RoundingModeEnumHalfEven = 0,
  RoundingModeEnumHalfUp = 1,
  RoundingModeEnumHalfDown = 2,
};

@class SuggestTokenizer;

SWIFT_CLASS("_TtC13Commercetools13SearchKeyword")
@interface SearchKeyword : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, strong) SuggestTokenizer * _Nullable suggestTokenizer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools17SetBillingAddress")
@interface SetBillingAddress : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithAddress:(Address * _Nullable)address OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools10SetCountry")
@interface SetCountry : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithCountry:(NSString * _Nullable)country OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools14SetCustomField")
@interface SetCustomField : NSObject <CartUpdate, PaymentUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name value:(id _Nullable)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools13SetCustomType")
@interface SetCustomType : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithType:(ResourceIdentifier * _Nullable)type fields:(id _Nullable)fields OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools16SetCustomerEmail")
@interface SetCustomerEmail : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithEmail:(NSString * _Nullable)email OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools34SetDeleteDaysAfterLastModification")
@interface SetDeleteDaysAfterLastModification : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithDeleteDaysAfterLastModification:(NSUInteger)deleteDaysAfterLastModification OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools22SetLineItemCustomField")
@interface SetLineItemCustomField : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithLineItemId:(NSString * _Nonnull)lineItemId name:(NSString * _Nonnull)name value:(id _Nullable)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools21SetLineItemCustomType")
@interface SetLineItemCustomType : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithType:(ResourceIdentifier * _Nullable)type lineItemId:(NSString * _Nonnull)lineItemId fields:(id _Nullable)fields OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools9SetLocale")
@interface SetLocale : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithLocale:(NSString * _Nonnull)locale OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools22SetMethodInfoInterface")
@interface SetMethodInfoInterface : NSObject <PaymentUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithInterface:(NSString * _Nonnull)interface OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools19SetMethodInfoMethod")
@interface SetMethodInfoMethod : NSObject <PaymentUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithMethod:(NSString * _Nullable)method OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools17SetMethodInfoName")
@interface SetMethodInfoName : NSObject <PaymentUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithName:(NSDictionary<NSString *, NSString *> * _Nullable)name OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools18SetShippingAddress")
@interface SetShippingAddress : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithAddress:(Address * _Nullable)address OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools17SetShippingMethod")
@interface SetShippingMethod : NSObject <CartUpdate>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull updateAction;
- (nonnull instancetype)initWithShippingMethod:(ObjCReference * _Nullable)shippingMethod OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, ShipmentStateEnum) {
  ShipmentStateEnumNone = 0,
  ShipmentStateEnumShipped = 1,
  ShipmentStateEnumReady = 2,
  ShipmentStateEnumPending = 3,
  ShipmentStateEnumDelayed = 4,
  ShipmentStateEnumPartial = 5,
  ShipmentStateEnumBackorder = 6,
};

@class ShippingRate;
enum ShippingMethodStateEnum : NSInteger;

SWIFT_CLASS("_TtC13Commercetools12ShippingInfo")
@interface ShippingInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull shippingMethodName;
@property (nonatomic, readonly, strong) Money * _Nonnull price;
@property (nonatomic, readonly, strong) ShippingRate * _Nonnull shippingRate;
@property (nonatomic, readonly, strong) TaxedItemPrice * _Nullable taxedPrice;
@property (nonatomic, readonly, strong) TaxRate * _Nullable taxRate;
@property (nonatomic, readonly, copy) NSArray<Delivery *> * _Nonnull deliveries;
@property (nonatomic, readonly, strong) DiscountedLineItemPrice * _Nullable discountedPrice;
@property (nonatomic, readonly) enum ShippingMethodStateEnum shippingMethodStateValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class ZoneRate;
@class ShippingMethodResponse;

SWIFT_CLASS("_TtC13Commercetools14ShippingMethod")
@interface ShippingMethod : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable key;
@property (nonatomic, readonly) NSUInteger version;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastModifiedAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable descriptionValue;
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull taxCategory;
@property (nonatomic, readonly, copy) NSArray<ZoneRate *> * _Nonnull zoneRates;
@property (nonatomic, readonly) BOOL isDefault;
@property (nonatomic, readonly, copy) NSString * _Nullable predicate;
/// Retrieves a shipping method by UUID.
/// \param id Unique ID of the cart to be retrieved.
///
/// \param expansion An optional array of expansion property names.
///
/// \param result The code to be executed after processing the response.
///
+ (void)byId:(NSString * _Nonnull)id expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(ShippingMethod * _Nullable, NSArray<NSError *> * _Nullable))result;
/// Queries for shipping methods.
/// \param predicate An optional array of predicates used for querying for carts.
///
/// \param sort An optional array of sort options used for sorting the results.
///
/// \param expansion An optional array of expansion property names.
///
/// \param limit An optional parameter to limit the number of returned results.
///
/// \param offset An optional parameter to set the offset of the first returned result.
///
/// \param result The code to be executed after processing the response.
///
+ (void)queryWithPredicates:(NSArray<NSString *> * _Nullable)predicates sort:(NSArray<NSString *> * _Nullable)sort expansion:(NSArray<NSString *> * _Nullable)expansion limit:(NSUInteger)limit offset:(NSUInteger)offset result:(void (^ _Nonnull)(ShippingMethodResponse * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)byKey:(NSString * _Nonnull)key expansion:(NSArray<NSString *> * _Nullable)expansion result:(void (^ _Nonnull)(ShippingMethod * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)forCart:(Cart * _Nonnull)cart result:(void (^ _Nonnull)(NSArray<ShippingMethod *> * _Nullable, NSArray<NSError *> * _Nullable))result;
+ (void)forCountry:(NSString * _Nonnull)country state:(NSString * _Nullable)state currency:(NSString * _Nullable)currency result:(void (^ _Nonnull)(NSArray<ShippingMethod *> * _Nullable, NSArray<NSError *> * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools22ShippingMethodResponse")
@interface ShippingMethodResponse : NSObject
@property (nonatomic, readonly) NSUInteger offset;
@property (nonatomic, readonly) NSUInteger count;
@property (nonatomic, readonly) NSUInteger total;
@property (nonatomic, readonly, copy) NSArray<ShippingMethod *> * _Nonnull results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, ShippingMethodStateEnum) {
  ShippingMethodStateEnumDoesNotMatchCart = 0,
  ShippingMethodStateEnumMatchesCart = 1,
};


SWIFT_CLASS("_TtC13Commercetools12ShippingRate")
@interface ShippingRate : NSObject
@property (nonatomic, readonly, strong) Money * _Nonnull price;
@property (nonatomic, readonly, strong) Money * _Nullable freeAbove;
@property (nonatomic, readonly) BOOL isMatchingValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools7SubRate")
@interface SubRate : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) double amount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools16SuggestTokenizer")
@interface SuggestTokenizer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable inputs;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools8SyncInfo")
@interface SyncInfo : NSObject
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull channelReference;
@property (nonatomic, readonly, copy) NSString * _Nullable externalId;
@property (nonatomic, readonly, copy) NSDate * _Nonnull syncedAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, TaxModeEnum) {
  TaxModeEnumPlatform = 0,
  TaxModeEnumExternal = 1,
  TaxModeEnumExternalAmount = 2,
  TaxModeEnumDisabled = 3,
};


SWIFT_CLASS("_TtC13Commercetools10TaxPortion")
@interface TaxPortion : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) double rate;
@property (nonatomic, readonly, strong) Money * _Nonnull amount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools7TaxRate")
@interface TaxRate : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) BOOL includedInPrice;
@property (nonatomic, readonly, copy) NSString * _Nonnull country;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSArray<SubRate *> * _Nonnull subRates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools14TaxedItemPrice")
@interface TaxedItemPrice : NSObject
@property (nonatomic, readonly, strong) Money * _Nonnull totalNet;
@property (nonatomic, readonly, strong) Money * _Nonnull totalGross;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools10TaxedPrice")
@interface TaxedPrice : NSObject
@property (nonatomic, readonly, strong) Money * _Nonnull totalNet;
@property (nonatomic, readonly, strong) Money * _Nonnull totalGross;
@property (nonatomic, readonly, copy) NSArray<TaxPortion *> * _Nonnull taxPortions;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

/// Enum used to specify current token state.
/// <ul>
///   <li>
///     CustomerToken:    Auth manager is handling tokens for a logged in customer.
///   </li>
///   <li>
///     AnonymousToken:   Auth manager is handling tokens for an anonymous customer.
///   </li>
///   <li>
///     PlainToken:       Auth manager is handling a token without an associated customer.
///   </li>
///   <li>
///     NoToken:          Auth manager does not have a token (i.e. because Commercetools configuration is not valid)
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TokenState) {
  TokenStateCustomerToken = 0,
  TokenStateAnonymousToken = 1,
  TokenStatePlainToken = 2,
  TokenStateNoToken = 3,
};


SWIFT_CLASS("_TtC13Commercetools12TrackingData")
@interface TrackingData : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable trackingId;
@property (nonatomic, readonly, copy) NSString * _Nullable carrier;
@property (nonatomic, readonly, copy) NSString * _Nullable provider;
@property (nonatomic, readonly, copy) NSString * _Nullable providerTransaction;
@property (nonatomic, readonly) BOOL isReturnValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

enum TransactionTypeEnum : NSInteger;
enum TransactionStateEnum : NSInteger;

SWIFT_CLASS("_TtC13Commercetools11Transaction")
@interface Transaction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDate * _Nullable timestamp;
@property (nonatomic, readonly) enum TransactionTypeEnum typeValue;
@property (nonatomic, readonly, strong) Money * _Nonnull amount;
@property (nonatomic, readonly, copy) NSString * _Nullable interactionId;
@property (nonatomic, readonly) enum TransactionStateEnum stateValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13Commercetools16TransactionDraft")
@interface TransactionDraft : NSObject
- (nonnull instancetype)initWithTimestamp:(NSDate * _Nullable)timestamp type:(enum TransactionTypeEnum)type amount:(Money * _Nonnull)amount interactionId:(NSString * _Nullable)interactionId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, TransactionStateEnum) {
  TransactionStateEnumPending = 0,
  TransactionStateEnumInitial = 1,
  TransactionStateEnumSuccess = 2,
  TransactionStateEnumFailure = 3,
};

typedef SWIFT_ENUM(NSInteger, TransactionTypeEnum) {
  TransactionTypeEnumAuthorization = 0,
  TransactionTypeEnumCancelAuthorization = 1,
  TransactionTypeEnumCharge = 2,
  TransactionTypeEnumRefund = 3,
  TransactionTypeEnumChargeback = 4,
};


SWIFT_CLASS("_TtC13Commercetools8ZoneRate")
@interface ZoneRate : NSObject
@property (nonatomic, readonly, strong) ObjCReference * _Nonnull zoneReference;
@property (nonatomic, readonly, copy) NSArray<ShippingRate *> * _Nonnull shippingRates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
